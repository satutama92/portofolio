@mixin custom-font($family-name, $sub-path, $file-name, $cache-bust, $weight: normal, $style: normal) {
	$_font-path: '../fonts';

	$_formats: (
		eot: 'embedded-opentype',
		ttf: 'truetype',
		woff: 'woff',
		woff2: 'woff2',
		svg: 'svg'
	);

	@if $family-name {
		$_src-list: ();
		// fill sources list
		@each $_format in $_formats {
			$_format-code: nth($_format, 1);
			$_format-name: nth($_format, 2);

			// set up base source url
			$_src: url('#{$_font-path}/#{$sub-path}/#{$file-name}.#{$_format-code}?#{if($_format-code == eot, 'iefix', '')}#{$cache-bust}');
			// add source format
			$_src: append($_src, format('#{$_format-name}'), 'space');

			$_src-list: append($_src-list, $_src, 'comma');
		}

		font-family: $family-name;
		// legacy IE
		src: url('#{$_font-path}/#{$file-name}.eot?#{$cache-bust}');
		// other browsers
		src: $_src-list;
		// font settings
		font-weight: $weight;
		font-style: $style;
	}@else {
		@warn 'Error: family name must be given';
	}
}

@mixin cf(){
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}

@mixin align-absolute(){
	position: absolute; top: 50%; left: 50%;
	transform: translate3d( -50%, -50%, 0 );
}

@mixin align-absolute-vertical(){
	position: absolute; top: 50%;
	transform: translate3d( 0, -50%, 0 );
}

@mixin align-absolute-horizontal(){
	position: absolute; left: 50%;
	transform: translate3d( -50%, 0, 0 );
}

@mixin box-shadow-level( $level ) {
	@if( $level == 1 ){
		box-shadow: 0 0.1em 0.3em rgba( 0, 0, 0, 0.12 ), 0 0.08em 0.1em rgba( 0, 0, 0, 0.24 );
	}@else if( $level == 2 ) {
		box-shadow: 0 0.2em 0.5em rgba( 0, 0, 0, 0.16 ), 0 0.2em 0.5em rgba( 0, 0, 0, 0.23 );
	}@else if( $level == 3 ) {
		box-shadow: 0 0.7em 1.5em rgba( 0, 0, 0, 0.19 ), 0 0.4em 0.4em rgba( 0, 0, 0, 0.23 );
	}@else if( $level == 4 ) {
		box-shadow: 0 1em 1.8em rgba( 0, 0, 0, 0.25), 0 0.7em 0.7em rgba(0, 0, 0, 0.22);
	}@else if( $level == 5 ) {
		box-shadow: 0 1.3em 2.5em rgba( 0, 0, 0, 0.3 ), 0 1em 0.9em rgba( 0, 0, 0, 0.22 );
	}
}

@mixin aspect-ratio( $width: 16, $height: 9 ){
	position: relative;
	z-index: 1;
	&:before{
		display: block;
		content: "";
		width: 100%;
		padding-top: ($height / $width) * 100%;
	}
	> iframe, .content{
		position: absolute; top: 0; left: 0; right: 0; bottom: 0;
		height: 100%;
		width: 100%;
	}
}

@mixin font-smoothing( $type: antialiased, $color: grayscale ){
	-webkit-font-smoothing: 	$type;
	-moz-osx-font-smoothing: 	$color;
}

@mixin placeholder{
	&::-webkit-input-placeholder { @content; }
	&:-moz-placeholder           { @content; }
	&::-moz-placeholder          { @content; }
	&:-ms-input-placeholder      { @content; }
}

@mixin triangle($direction, $color: currentcolor, $size: 1em) {
  @if not index(top right bottom left, $direction) {
    @error "Direction must be either `top`, `right`, `bottom` or `left`.";
  }

  width: 0;
  height: 0;
  content: '';
  z-index: 2;
  border-#{opposite-direction($direction)}: ($size * 1.5) solid $color;

  $perpendicular-borders: $size solid transparent;

  @if $direction == top or $direction == bottom {
    border-left:   $perpendicular-borders;
    border-right:  $perpendicular-borders;
  } @else if $direction == right or $direction == left {
    border-bottom: $perpendicular-borders;
    border-top:    $perpendicular-borders;
  }
}

@mixin border-full-width(){
		content: '';
		position: absolute;
		display: block;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		border-top: .1rem solid $black-15;
		z-index: -1;
		@include break(md){right: -9999px;  bottom: 0;  left: -9999px;}
}
